image: php:7-fpm

stages:
- build
- test
- quality

build:
  stage: build
  image: php:7.0
  script:
  - install_composer
  artifacts:
    paths:
    - ./vendor/*

unit_test:
  stage: test
  image: php:7-fpm
  script:
  - php vendor/bin/codecept run unit --colors

coverage:
  stage: quality
  script:
  - install_xdebug
  - php vendor/bin/codecept run unit --coverage --coverage-html
  artifacts:
    paths:
    - ./tests/_output/coverage/*

phpcs:
  stage: quality
  allow_failure: true
  script:
  - php vendor/bin/phpcs --error-severity=1 --warning-severity=8 --extensions=php --colors

.before_script_bash: &before_script_bash |
#!/bin/bash

# We need to install dependencies only for Docker
  [[ ! -e /.dockerenv ]] && exit 0

  set -xe

  # Install git (the php image doesn't have it) which is required by composer
  apt-get update -yqq
  apt-get install git -yqq

  # Install phpunit, the tool that we will use for testing
  curl --location --output /usr/local/bin/phpunit https://phar.phpunit.de/phpunit.phar
  chmod +x /usr/local/bin/phpunit

  # Install mysql driver
  # Here you can install any other extension that you need
  docker-php-ext-install pdo_mysql

  # DevOps variables and functions
  [[ "$TRACE" ]] && set -x

  # Install composer and install project dependencies
  function install_composer() {

    # Install composer
    curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

    # Install all project dependencies
    composer install

  }

  function install_xdebug() {
    apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \
    && pecl install xdebug-2.6.0 \
    && docker-php-ext-enable xdebug
  }


before_script:
- docker-php-ext-install gd
- *before_script_bash


